---
import ExternalLink from "@/components/ExternalLink.astro";
import Layout from "@/layouts/Layout.astro";
import Logo from "@/components/Logo.astro";

const socials = [
	// In rough order of my contact preference:
	{
		platform: "signal",
		// Signal usernames are designed to be ephemeral, so sharing my "stable" one here doesn't make much sense
		handle: "Ask on another platform",
		href: "https://signal.org/download/",
		note: true,
	},
	{
		platform: "matrix",
		handle: "@average:average.name",
		href: "https://matrix.to/#/@average:average.name",
	},
	{
		platform: "fedi",
		handle: "@average@average.name",
		href: "https://average.name/@average",
	},
	{
		platform: "discord",
		handle: "avghelper:discord.com",
		href: "https://discordapp.com/users/498477215931957258",
	},
	{
		platform: "phone",
		handle: "Wouldn't you like to know?",
		note: true,
	},
] as const satisfies NonEmptyArray<ContactInfo>;

interface ContactInfo {
	/**
	 * The name of the contact platform where I may be found.
	 */
	platform: Parameters<typeof Logo>[0]["name"];

	/**
	 * My unique identifier on the platform, or an explanatory note.
	 */
	handle: string;

	/**
	 *  A URL by which I can be reached on the platform.
	 */
	href?: string;

	/**
	 * Whether the `handle` is an explanatory note (and therefore should be rendered in a mixed-width font).
	 */
	note?: true;
}

type NonEmptyArray<T> = readonly [T, ...ReadonlyArray<T>];
---

<Layout contentClass="content contact">
	<h1 id="how-to-reach-me">How to reach me</h1>
	<ul>
		{
			socials.map(s => (
				// eslint-disable-next-line @typescript-eslint/no-unsafe-return
				<li>
					<ExternalLink href={"href" in s ? s.href : "#"} class={"note" in s ? "plain" : null}>
						<Logo name={s.platform} />
						<span>{s.handle}</span>
					</ExternalLink>
				</li>
			))
		}
	</ul>
</Layout>
