---
import type { HTMLAttributes } from "astro/types";
import { checkUrl } from "@/helpers/checkUrl.js";

interface Props extends Omit<HTMLAttributes<"a">, "target" | "rel"> {
	href: string | URL;

	/**
	 * Whether the `rel` attribute should include the special `"me"` value.
	 * @default false
	 */
	relMe?: boolean;

	/**
	 * Whether the `rel` attribute should include the special `"license"` value.
	 * @default false
	 */
	relLicense?: boolean;

	/**
	 * Whether the link's target should be this tab or open a new one.
	 * @default false
	 */
	sameTab?: boolean;
}

const { href, relMe = false, relLicense = false, sameTab = false, ...attrs } = Astro.props;

const target = sameTab ? undefined : "_blank";

const rel = ["external", "noopener", "noreferrer", relMe ? "me" : "", relLicense ? "license" : ""]
	.filter(a => a)
	.join(" ");

// Ensure external links aren't broken
if (URL.canParse(href)) {
	const src = new URL(href);
	await checkUrl(src);
}
---

<a href={href} target={target} rel={rel} {...attrs}><slot /></a>
